<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/aop 
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx
     	   http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	<description>数据库连接配置</description>
	
	<!-- 数据源配置和事务配置 -->
	<!-- dbcp做为数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="${dbcp.initialSize}" />
		<property name="maxActive" value="${dbcp.maxActive}" />
		<property name="maxIdle" value="${dbcp.maxIdle}" />
		<property name="minIdle" value="${dbcp.minIdle}" />
		<property name="removeAbandoned" value="${dbcp.removeAbandoned}" />
		<property name="removeAbandonedTimeout" value="${dbcp.removeAbandonedTimeout}" />
		<property name="maxWait" value="${dbcp.maxWait}" />
		<property name="validationQuery" value="${dbcp.validationQuery}" />
		<property name="testWhileIdle" value="${dbcp.testWhileIdle}" />
		<property name="testOnBorrow" value="${dbcp.testOnBorrow}" />
	</bean>

    <!-- 设定dbcp事务配置 -->
	 <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	  	<property name="dataSource" ref="dataSource" />
	 </bean>
	
	<!-- atomikos数据源配置 -->
<!-- 	<bean id="dataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">
		<property name="xaProperties">
			<props>
				<prop key="user">${jdbc.username}</prop>
				<prop key="password">${jdbc.password}</prop>
				<prop key="URL">${jdbc.url}</prop>
			</props>
		</property>
		<property name="uniqueResourceName" value="${ads.uniqueResourceName}"/>
		<property name="xaDataSourceClassName" value="${ads.xaDataSourceClassName}"/>
		<property name="poolSize" value="${ads.poolSize}"/>
		<property name="maxPoolSize" value="${ads.maxPoolSize}"/>
		<property name="borrowConnectionTimeout" value="${ads.borrowConnectionTimeout}"/>
	</bean> -->
	
	<!-- atomikos事务配置-->
<!-- 	<bean id="userTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager">
		<property name="forceShutdown" value="true" />
		<property name="transactionTimeout" value="300" />
	</bean>
	
	<bean id="userTransactionImp" class="com.atomikos.icatch.jta.UserTransactionImp">
		<property name="transactionTimeout" value="300" />
	</bean>	
	
	<bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="transactionManager" ref="userTransactionManager" />
		<property name="userTransaction" ref="userTransactionImp" />
		<property name="allowCustomIsolationLevels" value="true" />
	</bean> -->
	
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:spring/mybatis_config.xml" />
		<property name="mapperLocations" value="classpath:com/classaffairs/entity/*Mapper.xml" />
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
	<!-- <bean id="baseDao" class="com.sailing.sdp.orm.support.respository.BaseDaoSupport">
		<property name="sqlSession" ref="sqlSession" />
		<property name="mongoTemplate" ref="mongoTemplate" />
	</bean> -->
</beans>