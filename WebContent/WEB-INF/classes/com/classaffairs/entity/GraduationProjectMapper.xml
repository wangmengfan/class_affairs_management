<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.classaffairs.entity.GraduationProject" >
  <resultMap id="GraduationProjectResultMap" type="com.classaffairs.entity.GraduationProject" >
    <id column="graduation_project_id" property="graduationProjectId" jdbcType="BIGINT" />
    <result column="graduation_project_group" property="graduationProjectGroup" jdbcType="VARCHAR" />
    <result column="student_no" property="studentNo" jdbcType="VARCHAR" />
    <result column="student_name" property="studentName" jdbcType="VARCHAR" />
    <result column="reseach_title" property="reseachTitle" jdbcType="VARCHAR" />
    <result column="topic_selecting_report_score" property="topicSelectingReportScore" jdbcType="FLOAT" />
    <result column="guide_teacher" property="guideTeacher" jdbcType="VARCHAR" />
    <result column="memo" property="memo" jdbcType="VARCHAR" />
  </resultMap>
  <insert id="insert" parameterType="com.classaffairs.entity.GraduationProject" >
    insert into graduation_project
    <trim prefix="(" suffix=")" suffixOverrides="," >
      graduation_project_id,
      graduation_project_group,
      student_no,
      student_name,
      reseach_title,
      topic_selecting_report_score,
      guide_teacher,
      memo,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{graduationProjectId,jdbcType=BIGINT},
      #{graduationProjectGroup,jdbcType=VARCHAR},
      #{studentNo,jdbcType=VARCHAR},
      #{studentName,jdbcType=VARCHAR},
      #{reseachTitle,jdbcType=VARCHAR},
      #{topicSelectingReportScore,jdbcType=FLOAT},
      #{guideTeacher,jdbcType=VARCHAR},
      #{memo,jdbcType=VARCHAR},
    </trim>
  </insert>
  
  <!-- 批量插入生成的兑换码 -->
    <insert id ="insertByBatch" parameterType="java.util.List" >
            <!-- <selectKey resultType ="java.lang.Integer" keyProperty= "id"
                 order= "AFTER">
                SELECT LAST_INSERT_ID()
            </selectKey > -->
		insert into graduation_project(
			graduation_project_id,
		      graduation_project_group,
		      student_no,
		      student_name,
		      reseach_title,
		      topic_selecting_report_score,
		      guide_teacher,
		      memo
		)
           values
            <foreach collection ="list" item="graduationProjectItem" index= "index" separator =",">
                (
                 #{graduationProjectItem.graduationProjectId,jdbcType=BIGINT},
			      #{graduationProjectItem.graduationProjectGroup,jdbcType=VARCHAR},
			      #{graduationProjectItem.studentNo,jdbcType=VARCHAR},
			      #{graduationProjectItem.studentName,jdbcType=VARCHAR},
			      #{graduationProjectItem.reseachTitle,jdbcType=VARCHAR},
			      #{graduationProjectItem.topicSelectingReportScore,jdbcType=FLOAT},
			      #{graduationProjectItem.guideTeacher,jdbcType=VARCHAR},
			      #{graduationProjectItem.memo,jdbcType=VARCHAR}
                )
            </foreach >
     </insert >
  
  
  <update id="update" parameterType="com.classaffairs.entity.GraduationProject" >
    update `graduation_project`
    <set >
    <if test="graduationProjectGroup != null" >
        `graduation_project_group` = #{graduationProjectGroup,jdbcType=VARCHAR},
      </if>
      <if test="studentNo != null" >
        `student_no` = #{studentNo,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null" >
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="reseachTitle != null" >
        reseach_title = #{reseachTitle,jdbcType=VARCHAR},
      </if>
      <if test="topicSelectingReportScore != null" >
        topic_selecting_report_score = #{topicSelectingReportScore,jdbcType=VARCHAR},
      </if>
      <if test="guideTeacher != null" >
        guide_teacher = #{guideTeacher,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=VARCHAR},
      </if>
    </set>
    where graduation_project_id = #{graduationProjectId,jdbcType=BIGINT}
  </update>
  <delete id="delete" parameterType="Long">
    delete from graduation_project where graduation_project_id = #{graduationProjectId}
  </delete>
  <select id="findById" parameterType="Long" resultMap="GraduationProjectResultMap">
    select * from graduation_project where graduation_project_id = #{graduationProjectId}
  </select>
 <select id="findGraduationProjectByFuzzyInformation"  resultMap="GraduationProjectResultMap">
   	select * from graduation_project where 1 = 1
   	<if test="graduationProjectGroup != null" >
        `graduation_project_group` like #{graduationProjectGroup,jdbcType=VARCHAR},
    </if>
    <if test="studentNo != null" >
        `student_no` like #{studentNo,jdbcType=VARCHAR},
    </if>
     <if test="studentName != null" >
        `student_name` like #{studentName,jdbcType=VARCHAR},
    </if>
  </select>
   <select id="findGraduationProjectByStudentNo" parameterType="String" resultMap="GraduationProjectResultMap">
    	select * from graduation_project where graduation_project_group = (select graduation_project_group from graduation_project where student_no = #{studentNo}) order by topic_selecting_report_score desc
  </select>
  <select id="findGraduationProjectByGraduationProjectName" parameterType="String" resultMap="GraduationProjectResultMap">
    select * from graduation_project where name = #{graduation_projectName}
  </select>
</mapper>